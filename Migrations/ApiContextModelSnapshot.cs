// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MillionAndUp.Models;

#nullable disable

namespace MillionAndUp.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MillionAndUp.Models.Owner", b =>
                {
                    b.Property<Guid>("IdOwner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOwner");

                    b.ToTable("Owner", "dbo");

                    b.HasData(
                        new
                        {
                            IdOwner = new Guid("90d10994-3bdd-4ca2-a178-6a35fd653c59"),
                            Address = "Ever Green 123",
                            Birthday = new DateTime(1965, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "J.K. Rowling"
                        },
                        new
                        {
                            IdOwner = new Guid("6ebc3dbe-2e7b-4132-8c33-e089d47694cd"),
                            Address = "Simple Red 456",
                            Birthday = new DateTime(1952, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Walter Isaacson"
                        });
                });

            modelBuilder.Entity("MillionAndUp.Models.Property", b =>
                {
                    b.Property<Guid>("IdProperty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeInternal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdOwner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProperty");

                    b.HasIndex("IdOwner");

                    b.ToTable("Property", "dbo");
                });

            modelBuilder.Entity("MillionAndUp.Models.PropertyImage", b =>
                {
                    b.Property<Guid>("IdPropertyImage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<Guid?>("IdProperty")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("file")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPropertyImage");

                    b.HasIndex("IdProperty");

                    b.ToTable("PropertyImage", "dbo");
                });

            modelBuilder.Entity("MillionAndUp.Models.PropertyTrace", b =>
                {
                    b.Property<Guid>("IdPropertyTrace")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateSale")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdProperty")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("IdPropertyTrace");

                    b.HasIndex("IdProperty");

                    b.ToTable("PropertyTrace", "dbo");
                });

            modelBuilder.Entity("MillionAndUp.Models.Property", b =>
                {
                    b.HasOne("MillionAndUp.Models.Owner", "Owner")
                        .WithMany("Properties")
                        .HasForeignKey("IdOwner");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MillionAndUp.Models.PropertyImage", b =>
                {
                    b.HasOne("MillionAndUp.Models.Property", "Property")
                        .WithMany("PropertyImages")
                        .HasForeignKey("IdProperty");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("MillionAndUp.Models.PropertyTrace", b =>
                {
                    b.HasOne("MillionAndUp.Models.Property", "Property")
                        .WithMany("PropertyTraces")
                        .HasForeignKey("IdProperty");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("MillionAndUp.Models.Owner", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("MillionAndUp.Models.Property", b =>
                {
                    b.Navigation("PropertyImages");

                    b.Navigation("PropertyTraces");
                });
#pragma warning restore 612, 618
        }
    }
}
